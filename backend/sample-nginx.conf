# Пример конфигурации Nginx для проекта управления контрактами
# Сохраните этот файл как /etc/nginx/sites-available/contract-management
# И создайте символическую ссылку: 
# sudo ln -s /etc/nginx/sites-available/contract-management /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name ваш_домен.ru;  # Замените на ваш домен

    # Редирект с HTTP на HTTPS (активируйте после настройки SSL)
    # return 301 https://$host$request_uri;

    # Настройки для Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }
}

# HTTPS сервер (активируйте после настройки SSL)
server {
    listen 443 ssl http2;
    server_name ваш_домен.ru;  # Замените на ваш домен

    # SSL настройки (будут добавлены Certbot автоматически)
    # ssl_certificate /etc/letsencrypt/live/ваш_домен.ru/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/ваш_домен.ru/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Настройки безопасности
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Корневая директория для фронтенда (Vue.js)
    root /home/deployer/contract-management/frontend/dist;
    index index.html;

    # Логи
    access_log /var/log/nginx/contract-management-access.log;
    error_log /var/log/nginx/contract-management-error.log;

    # Обработка API запросов (FastAPI/Python)
    location /api {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # API документация (Swagger/ReDoc)
    location /docs {
        proxy_pass http://localhost:8000/docs;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /redoc {
        proxy_pass http://localhost:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openapi.json {
        proxy_pass http://localhost:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Обработка статических файлов Vue.js
    location / {
        try_files $uri $uri/ /index.html;
        expires 7d;
    }

    # Кэширование статических ресурсов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Запрет доступа к служебным файлам
    location ~ /\.(?!well-known) {
        deny all;
    }
}